generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
  zaps Zap[]
}

model Zap {
  id String @id @default(uuid())
  trigger Trigger?
  zapRun ZapRun[]
  actions Action[]
  userId Int 
  user User @relation(fields: [userId], references: [id])
}

model Trigger {
  id String @id @default(uuid())
  zap_id String @unique
  zap Zap @relation(fields: [zap_id],references: [id])
  type_Id Int
  type TypeTrigger @relation(fields: [type_Id],references: [id])
}

model Action {
  id String @id @default(uuid())
  sortingOrder Int @default(0)
  zap_id String
  zap Zap @relation(fields: [zap_id],references: [id])
  type_id String
  type TypeAction @relation(fields: [type_id],references: [id])
}

model TypeAction {
  id String @id @default(uuid())
  name String
  Actions Action[]
}

model TypeTrigger {
  id Int @id @default(autoincrement())
  name String
  trigger Trigger[]
}

model ZapRun {
  id String @id @default(uuid())
  zap_id String
  zap Zap @relation(fields: [zap_id], references: [id])
  metadata Json?
  zapOutbox ZapRunOutbox?
}

model ZapRunOutbox {
  id String @id @default(uuid())
  zapRun_id String @unique
  zapRun ZapRun @relation(fields: [zapRun_id],references: [id])
}